openapi: 3.0.0
info:
  title: jobs-api
  contact: {}
  version: "1.0"
servers:
  - url: https://jobs-api-wkbq.onrender.com/api/v1
    variables: {}
paths:
  /jobs:
    get:
      tags:
        - jobs
      summary: get all jobs
      operationId: getalljobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - jobs
      summary: Create a job
      operationId: Createajob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateajobRequest"
                - example:
                    company: Google
                    position: SDE1
            example:
              company: Google
              position: SDE1
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the job id
    get:
      tags:
        - jobs
      summary: Get a job
      operationId: Getajob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - jobs
      summary: Update a job
      operationId: Updateajob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - jobs
      summary: Delete a job
      operationId: Deleteajob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /auth/register:
    post:
      tags:
        - auth
      summary: Register
      operationId: Register
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisterRequest"
                - example:
                    name: Paras Jain
                    email: justChecking@gmail.com
                    password: Admin@123
            example:
              name: Paras Jain
              email: justChecking@gmail.com
              password: Admin@123
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - auth
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginRequest"
                - example:
                    email: jainparas979797@gmail.com
                    password: Admin@123
            example:
              email: jainparas979797@gmail.com
              password: Admin@123
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    CreateajobRequest:
      title: CreateajobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Google
        position: SDE1
    RegisterRequest:
      title: RegisterRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Paras Jain
        email: justChecking@gmail.com
        password: Admin@123
    LoginRequest:
      title: LoginRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: jainparas979797@gmail.com
        password: Admin@123
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: jobs
    description: ""
  - name: auth
    description: ""
